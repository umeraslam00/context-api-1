




How to use Context API (example):


1. Create a new folder named context.

2. Create a file called UserContext.js. It can be anything like LoginContext, ProfileContext, etc. (inside the context folder)

==================================
import React from 'react'
const UserContext = React.createContext()

export default UserContext

=================================
Now, this has become a provider and can be used as a wrapper.


3. Now, create a file called UserContextProvider.jsx inside the context folder.
========================================
import React from "react";
import UserContext from "./UserContext"


const UserContextProvider = ({children}) => {
    const [user, setUser] = useState(null);

   return (
           <UserContext.Provider value={{user, setUser}}>
            {children}
           </UserContext.Provider>

//we can pass as much data as we have in the value.

)
}

export const UserContextProvider

=========================================
we can give any name. In this example, we use children.


4. Now, we can use it in the app.js or index.js. Just need to import it and then use it in the return statement:

function app() {
    return (
             <UserContextProvider>
              <h1>Sample Heading</h1>
             </UserContextProvider>
  )
}

==============================================

5. Now, create components folder.

6. Now, create Login.jsx in components:

============================================
import React, { useContext, useState } from 'react'
import UserContext from '../context/UserContext'

function Login() {

    const [username, setUsername] = useState('')
    const [password, setPassword] = useState('')

    //we got the setUser from the UserContextProvider. We use it to set the value of User.
    const {setUser} = useContext(UserContext)

    const handleSubmit = (e) => {

       //when we submit, the value goes to the url. We don't want that!
        e.preventDefault()

        setUser({username, password})
    }


  return (
    <div>
     <h2>Login</h2>
     <input type="text" placeholder='username' value={username} onChange={(e) => setUsername(e.target.value)}/>
     <input type="text" placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)}/>
     <button onClick={handleSubmit}>Submit</button>
    </div>
  )
}

export default Login

============================================

7. Now, create Profile.jsx in components:

import React, { useContext } from "react"
import UserContext from "../context/UserContext"


const Profile = () => {
    
   //We get user from the UserContextProvider. We use it show data of user..
   const {user} = useContext(UserContext)

   if(!user) return <div>Please Login</div>
   
   return (
    <div>
        <h2>Profile</h2>
        <p>Username: {user.username}</p>
    </div>
   )

}

export default Profile

================================================

8. This is how App.jsx looks:

import Login from './components/Login'
import Profile from './components/Profile'
import UserContext from './context/UserContext'
import UserContextProvider from './context/UserContextProvider'

function App() {

  

  return (
    <UserContextProvider>
      <h1>Context API in React.js</h1>
      <Login />
      <Profile />

    </UserContextProvider>
    
  )
}

export default App
